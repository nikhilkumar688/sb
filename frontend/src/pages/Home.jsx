import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import Advertise from "@/components/shared/Advertise";
import PostCard from "@/components/shared/PostCard";
import { Button } from "@/components/ui/button";
import { ArrowRight } from "lucide-react";
import ToppostAdvertise from "@/components/shared/Toppostadvertise";

const Home = () => {
  const [posts, setPosts] = useState([]);

  useEffect(() => {
    const fetchPosts = async () => {
      try {
        const res = await fetch("/api/post/getPosts?limit=6");
        const data = await res.json();
        if (res.ok) {
          setPosts(data.posts);
        }
      } catch (error) {
        console.error("Failed to fetch posts:", error);
      }
    };

    fetchPosts();
  }, []);

  return (
    <div className="bg-gradient-to-b from-[#cafbff] via-sky-50 via-rose-50 via-indigo-50 to-blue-100 min-h-screen">
      {/* Hero Section */}
      <div className="flex flex-col gap-6 p-10 md:p-28 max-w-6xl mx-auto animate-fade-in ">
        <h1 className="text-4xl md:text-5xl font-bold bg-gradient-to-r from-[#0004ed] via-gray-400 to-orange-500 text-transparent bg-clip-text transition-all duration-700 text-center leading-relaxed pt-4">
          ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à!{" "}
          <span className="text-orange-600">
            <span className="text-black font-extralight">-</span> ‡§∏‡§Æ‡§Ø
          </span>
          <span className="text-green-500"> ‡§¨‡§ø‡§π‡§æ‡§∞</span>
        </h1>

        <p className="text-gray-800 mt-3 text-lg leading-relaxed text-center">
          ‡§π‡§Æ ‡§≤‡§æ‡§§‡•á ‡§π‡•à‡§Ç ‡§¶‡•á‡§∂-‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§§‡•á‡§ú‡§º ‡§î‡§∞ ‡§∏‡§ü‡•Ä‡§ï ‡§ñ‡§¨‡§∞‡•á‡§Ç ‚Äì ‡§∞‡§æ‡§ú‡§®‡•Ä‡§§‡§ø, ‡§ñ‡•á‡§≤,
          ‡§Æ‡§®‡•ã‡§∞‡§Ç‡§ú‡§®, ‡§Ö‡§∞‡•ç‡§•‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§æ, ‡§§‡§ï‡§®‡•Ä‡§ï, ‡§î‡§∞ ‡§∏‡§Æ‡§æ‡§ú ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•Ä ‡§π‡§∞ ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä‡•§
        </p>

        <p className="text-gray-800 text-lg leading-relaxed text-center">
          ‡§π‡§Æ‡§æ‡§∞‡§æ ‡§â‡§¶‡•ç‡§¶‡•á‡§∂‡•ç‡§Ø ‡§π‡•à ‡§Ü‡§™‡§ï‡•ã ‡§π‡§∞ ‡§ñ‡§¨‡§∞ ‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡•á ‡§∞‡§ñ‡§®‡§æ ‡§î‡§∞ ‡§¨‡§ø‡§®‡§æ ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡§ü‡§ï‡§æ‡§µ ‡§ï‡•á,
          ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§§‡§•‡•ç‡§Ø ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∏‡•Ç‡§ö‡§®‡§æ ‡§¶‡•á‡§®‡§æ‡•§ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ü‡§™ ‡§∞‡§π‡•á‡§Ç‡§ó‡•á ‡§π‡§∞ ‡§ò‡§ü‡§®‡§æ‡§ï‡•ç‡§∞‡§Æ ‡§∏‡•á
          ‡§Ö‡§™‡§°‡•á‡§ü‡•§
        </p>

        <p className="text-gray-500 italic text-center">
          ‡§§‡§æ‡§ú‡§º‡§æ ‡§î‡§∞ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§ï ‡§ñ‡§¨‡§∞‡•ã‡§Ç ‡§ï‡§æ ‡§≠‡§∞‡•ã‡§∏‡•á‡§Æ‡§Ç‡§¶ ‡§∏‡•ç‡§∞‡•ã‡§§‡•§
        </p>

        <div className="text-center">
          <Link to={"/search"}>
            <Button className="bg-gradient-to-r from-[#0004ed] via-black to-[#0004ed] hover:from-rose-700 hover:to-red-600 text-white py-3 px-6 rounded-full font-bold shadow-lg hover:shadow-xl transition-all duration-300 flex items-center gap-2 w-fit mx-auto">
              ‡§∏‡§≠‡•Ä ‡§ñ‡§¨‡§∞‡•á‡§Ç ‡§¶‡•á‡§ñ‡•á‡§Ç <ArrowRight className="h-5 w-5" />
            </Button>
          </Link>
        </div>
      </div>

      {/* Features Section */}
      <section className="pb-16 animate-fade-in-up">
        <div className="max-w-7xl mx-auto text-center">
          <h2 className="text-4xl font-extrabold mb-12 text-indigo-800 tracking-tight">
            ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§ö‡•Å‡§®‡•á‡§Ç{" "}
            <span className="text-pink-600">
              <span className="text-orange-600">‡§∏‡§Æ‡§Ø</span>{" "}
              <span className="text-green-500">‡§¨‡§ø‡§π‡§æ‡§∞</span>
              <span className="ml-6 text-5xl">{"?"}</span>
            </span>
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 px-6">
            <FeatureCard
              title={"‡§§‡•á‡§ú‡§º ‡§Ö‡§™‡§°‡•á‡§ü"}
              description={
                "‡§π‡§∞ ‡§Æ‡§ø‡§®‡§ü ‡§¨‡§¶‡§≤‡§§‡•Ä ‡§ñ‡§¨‡§∞‡•ã‡§Ç ‡§™‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡•à‡§®‡•Ä ‡§®‡§ú‡§º‡§∞ ‚Äì ‡§¨‡•ç‡§∞‡•á‡§ï‡§ø‡§Ç‡§ó ‡§®‡•ç‡§Ø‡•Ç‡§ú‡§º, ‡§≤‡§æ‡§á‡§µ ‡§Ö‡§™‡§°‡•á‡§ü‡•ç‡§∏ ‡§î‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø ‡§∏‡•Ç‡§ö‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§Æ‡§Ø ‡§¨‡§ø‡§π‡§æ‡§∞ ‡§∏‡§¨‡§∏‡•á ‡§Ü‡§ó‡•á‡•§"
              }
              icon="‚ö°"
              bgColor="from-amber-100 to-yellow-50"
            />
            <FeatureCard
              title={"‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø‡§§‡§æ"}
              description={
                "‡§π‡§Æ ‡§¨‡§ø‡§®‡§æ ‡§ï‡§ø‡§∏‡•Ä ‡§™‡§ï‡•ç‡§∑‡§™‡§æ‡§§ ‡§ï‡•á ‡§∏‡§ü‡•Ä‡§ï ‡§î‡§∞ ‡§∏‡§§‡•ç‡§Ø‡§æ‡§™‡§ø‡§§ ‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§¶‡•á‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§∂‡•ç‡§µ‡§æ‡§∏ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§π‡•Ä ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï‡§§‡§æ ‡§π‡•à‡•§"
              }
              icon="‚úÖ"
              bgColor="from-emerald-100 to-lime-50"
            />
            <FeatureCard
              title={"‡§Ü‡§™‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§ú‡§º"}
              description={
                "‡§∏‡§Æ‡§æ‡§ú ‡§ï‡•Ä ‡§∏‡§ö‡•ç‡§ö‡•Ä ‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞ ‡§™‡•á‡§∂ ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§Ü‡§™‡§ï‡•Ä ‡§¨‡§æ‡§§ ‡§ï‡•ã ‡§Æ‡§Ç‡§ö ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§¶‡•ç‡§ß ‡§π‡•à‡§Ç‡•§ ‡§ú‡§®-‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ‡§§‡§æ ‡§¶‡•á‡§®‡§æ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§π‡•à‡•§"
              }
              icon="üó£Ô∏è"
              bgColor="from-sky-300 to-blue-100"
            />
          </div>
        </div>
      </section>

      {/* Advertisement Section */}
      <div className="p-3 bg-white">
        <Advertise />
      </div>

      {/* Recent Posts Section */}
      <div className="max-w-6xl mx-auto p-3 flex flex-col gap-8 py-7 animate-fade-in-up">
        {posts && posts.length > 0 && (
          <div className="flex flex-col gap-6">
            <h2 className="text-3xl font-bold text-indigo-700 border-b pb-2 w-fit border-indigo-300">
              ‡§§‡§æ‡§ú‡§º‡§æ ‡§ñ‡§¨‡§∞‡•á‡§Ç
            </h2>

            <div className="flex flex-wrap gap-6">
              {posts.map((post) => (
                <PostCard key={post._id} post={post} />
              ))}
            </div>

            <Link
              to={"/search"}
              className="text-lg text-purple-600 hover:underline text-center font-semibold"
            >
              ‡§î‡§∞ ‡§ñ‡§¨‡§∞‡•á‡§Ç ‡§¶‡•á‡§ñ‡•á‡§Ç
            </Link>
          </div>
        )}
      </div>

      {/* Advertisement Section */}
      <div className="p-3 bg-white">
        <ToppostAdvertise />
      </div>
    </div>
  );
};

// FeatureCard Subcomponent
const FeatureCard = ({ title, description, icon, bgColor }) => {
  return (
    <div
      className={`p-6 bg-gradient-to-br ${bgColor} rounded-2xl shadow-lg hover:shadow-2xl transition duration-300 transform hover:-translate-y-1 hover:scale-105 text-center`}
    >
      <div className="text-6xl mb-4">{icon}</div>
      <h3 className="text-2xl font-semibold text-gray-800 mb-2">{title}</h3>
      <p className="text-gray-600">{description}</p>
    </div>
  );
};

export default Home;
